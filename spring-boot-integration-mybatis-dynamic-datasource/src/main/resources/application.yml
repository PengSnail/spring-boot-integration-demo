#数据源配置信息
var:
  db1:
    db-host: 127.0.0.1:3306
    db-user: root
    db-pass: 123456
  db2:
    db-host: 127.0.0.1:3306
    db-user: root
    db-pass: 123456

primary:
  datasource:
    #DruidDataSource配置属性列表:https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
    druid:
      #连接数据库的url，不同数据库不一样。
      url: jdbc:mysql://${var.db1.db-host}/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
      #连接数据库的用户名
      username: ${var.db1.db-user}
      #连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter。
      password: ${var.db1.db-pass}
      #JDBC驱动程序的完全限定名。默认情况下基于URL自动检测。
      #这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
      driver-class-name: com.mysql.cj.jdbc.Driver
      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 1
      #监控统计用的filter:stat,日志用的filter:log4j,防御sql注入的filter:wall
      filters: stat
      #最大连接池数量
      max-active: 20
      #最小连接池数量
      min-idle: 1
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 60000
      use-unfair-lock: true
      #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 'x'
      #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 5
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #有两个含义：
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000

db2:
  datasource:
    #DruidDataSource配置属性列表:https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
    druid:
      #连接数据库的url，不同数据库不一样。
      url: jdbc:mysql://${var.db2.db-host}/test_2?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
      #连接数据库的用户名
      username: ${var.db2.db-user}
      #连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter。
      password: ${var.db2.db-pass}
      #JDBC驱动程序的完全限定名。默认情况下基于URL自动检测。
      #这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
      driver-class-name: com.mysql.cj.jdbc.Driver
      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 1
      #监控统计用的filter:stat,日志用的filter:log4j,防御sql注入的filter:wall
      filters: stat
      #最大连接池数量
      max-active: 20
      #最小连接池数量
      min-idle: 1
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 60000
      use-unfair-lock: true
      #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 'x'
      #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 5
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #有两个含义：
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000

#Mybatis 配置信息:https://mybatis.org/mybatis-3/zh/configuration.html#
mybatis:
  #MyBatis Mapper 所对应的 XML 文件位置
  mapper-locations: classpath*:/mapper/**/*Dao.xml
  #MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名(即 XML 中调用的时候不用包含包名)
  #实体扫描，多个 package 用逗号(,)或者分号(;)分隔
  type-aliases-package: com.peng.demo.bean
  configuration:
    #是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。
    map-underscore-to-camel-case: true
    #开启Mybatis二级缓存，默认为 true
    cache-enabled: false
    #允许 JDBC 支持自动生成主键，需要数据库驱动支持。如果设置为 true，将强制使用自动生成主键。尽管一些数据库驱动不支持此特性，但仍可正常工作（如 Derby）。
    use-generated-keys: true